1) https://leetcode.com/explore/challenge/card/january-leetcoding-challenge-2021/579/week-1-january-1st-january-7th/3589/
                                                          class Solution {
                                                                      public:
                                                                           set<int> s;
                                                                          bool findlcs(vector<int>& arr,vector<int>& k)
                                                                          {
                                                                              int n=arr.size(),m=k.size();
                                                                              int t[n+1][m+1];
                                                                              for(int i=0;i<=n;i++)
                                                                                  for(int j=0;j<=m;j++) if(i==0 || j==0) t[i][j]=0;
                                                                              int mx=0;
                                                                              for(int i=1;i<=n;i++)
                                                                              {
                                                                                  for(int j=1;j<=m;j++)
                                                                                  {
                                                                                      if(arr[i-1]==k[j-1]) t[i][j]=t[i-1][j-1]+1;
                                                                                      else t[i][j]=0;
                                                                                  }
                                                                              }
                                                                              for(int i=0;i<=n;i++)
                                                                              {
                                                                                  for(int j=0;j<=m;j++)
                                                                                  {
                                                                                    mx=max(mx,t[i][j]);
                                                                                  }
                                                                              }
                                                                              if(mx==m) return true;
                                                                              else return false;
                                                                          }

                                                                          bool canFormArray(vector<int>& arr, vector<vector<int>>& pieces) {
                                                                             s.clear();
                                                                              for(int i:arr)
                                                                                  s.insert(i);
                                                                              for(auto i:pieces)
                                                                              {
                                                                                  if(i.size()==1){
                                                                                      if(s.find(i[0])==s.end()) return false;
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                      if(!findlcs(arr,i)) return false;
                                                                                  }
                                                                              }
                                                                              return true;
                                                                          }
                                                                      };
                                                                      
